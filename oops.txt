class
object
inheritace
polymorpism
abstraction
encapsulation

Abstraction: 
--> the process of hiding the real implementation of an application from the user

--> Abstraction is used to hide the internal functionality of the function from the users.

--> User is familiar with that "what function does" but they don't know "how it does."

ex: brake in car,music player

Encapsulation:(capsule)

--> binding data and code,object together in an data and keep safe from outside interface and wrappers

--> this can be achived by access specifiers(public,private,proctected)
	public--> access for inherited class and other package  ex:ifsc code
	private --> only access for that class only (__)  ->pin number
	protected -->only for that package (_)  ->one bank

-->the process of wrapping up variables and methods into a single entity.

class:
-->A class is a user-defined blueprint or prototype from which objects are created.

object:
 --> an real world entity for the class

ex: Bird --> sparrow,eagel,crow
    flower --> Rose,vani,lily
    player --> sachien , dhoni 

Inheritance:
--> One class acquires properties(behaviors) of another class

--> to reduce the reuce of code

--> single,multiple,multilevel

-->parentclass,base class,superclass -->childclass,derived class,sub class

single:
parent -->child

multiple:
parent,grandparent -->child

multilevel:
parent -->child1

child1 -->child2

Hierarchical Inheritance:

parent1 ->child1
parent1 ->child2

hybrid:
(single+hierarical+multilevel)

constuctor:
--> when the object is created ..constructor method exihibits

oops:

-->abstract class
	-->blueprint for other class and create set of methods that must be in the any child class but bulit form parent class
	-->cannot create object
	-->should be use the abstratc method while inheriating abstrct class

--> method overloading

--> method overriding

-->static
-->database
      --> i dont have much more knowledge in databse because in django sqlqre inbulided when the python coded 
      --->but i can do the crud operation create,read,delete,update
      --->in create the object created to the table and object.save() the data will be stored in the database
      --->in read the object created to the table and we call that objects.all() will retrive all data in the table
      --->in update we create the object to the table and we pass the primary key into the filter() and get the data updata the given data
      --->in delete as same like we create the object to the table and we pass the primary key into the filter() and delete() will delete the delete the data
      
